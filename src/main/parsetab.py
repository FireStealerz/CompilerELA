
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLEGELTGTEQNErightASSIGNleftPLUSMINUSleftTIMESDIVIDEASSIGN DIVIDE DO ELSE EQ FLOAT FOR GE GT ID IF LBRACE LE LPAREN LT MINUS MOD NE NUMBER PLUS RBRACE RPAREN SEMICOLON STRING TIMES WHILEstatement : expressionstatement : ID ASSIGN NUMBER SEMICOLON\n                 | ID ASSIGN FLOAT SEMICOLONstatement : IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE statement RBRACE statement : DO LBRACE statement RBRACE  WHILE LPAREN expression RPAREN SEMICOLONstatement : FOR LPAREN statement expression RPAREN LBRACE statement RBRACEstatement : error SEMICOLONexpression : error SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                   expression : expression LT expression\n                   | expression LE expression\n                   | expression GT expression\n                   | expression GE expression\n                   | expression EQ expression\n                   | expression NE expression\n    expression : LPAREN expression RPARENexpression : NUMBERexpression : FLOATexpression : IDexpression : STRING'
    
_lr_action_items = {'ID':([0,2,3,4,5,7,12,13,14,15,16,17,18,19,20,21,22,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,64,65,67,72,73,74,76,],[3,-1,-24,-22,-23,28,-25,28,28,28,28,28,28,28,28,28,28,28,28,-24,28,3,3,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,28,-2,-3,3,3,28,3,-5,-7,3,-6,-4,]),'IF':([0,30,31,58,59,65,73,],[6,6,6,6,6,6,6,]),'WHILE':([0,30,31,56,58,59,65,73,],[8,8,8,60,8,8,8,8,]),'DO':([0,30,31,58,59,65,73,],[9,9,9,9,9,9,9,]),'FOR':([0,30,31,58,59,65,73,],[10,10,10,10,10,10,10,]),'error':([0,2,3,4,5,7,12,13,14,15,16,17,18,19,20,21,22,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,64,65,67,72,73,74,76,],[11,-1,-24,-22,-23,27,-25,27,27,27,27,27,27,27,27,27,27,27,27,-24,27,11,11,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,27,-2,-3,11,11,27,11,-5,-7,11,-6,-4,]),'LPAREN':([0,2,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,22,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,60,64,65,67,72,73,74,76,],[7,-1,-24,-22,-23,25,7,29,31,-25,7,7,7,7,7,7,7,7,7,7,7,7,-24,7,7,7,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,7,-2,-3,7,7,64,7,7,-5,-7,7,-6,-4,]),'NUMBER':([0,2,3,4,5,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,64,65,67,72,73,74,76,],[4,-1,-24,-22,-23,4,-25,4,4,4,4,4,4,4,4,4,4,4,44,4,-24,4,4,4,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,4,-2,-3,4,4,4,4,-5,-7,4,-6,-4,]),'FLOAT':([0,2,3,4,5,7,12,13,14,15,16,17,18,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,64,65,67,72,73,74,76,],[5,-1,-24,-22,-23,5,-25,5,5,5,5,5,5,5,5,5,5,5,45,5,-24,5,5,5,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,5,-2,-3,5,5,5,5,-5,-7,5,-6,-4,]),'STRING':([0,2,3,4,5,7,12,13,14,15,16,17,18,19,20,21,22,23,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,51,52,53,58,59,64,65,67,72,73,74,76,],[12,-1,-24,-22,-23,12,-25,12,12,12,12,12,12,12,12,12,12,12,12,-24,12,12,12,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,12,-2,-3,12,12,12,12,-5,-7,12,-6,-4,]),'$end':([1,2,3,4,5,12,28,32,33,34,35,36,37,38,39,40,41,42,43,47,48,52,53,67,72,74,76,],[0,-1,-24,-22,-23,-25,-24,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,-2,-3,-5,-7,-6,-4,]),'RBRACE':([2,3,4,5,12,28,32,33,34,35,36,37,38,39,40,41,42,43,47,48,50,52,53,62,63,67,69,72,74,75,76,],[-1,-24,-22,-23,-25,-24,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-9,56,-2,-3,66,67,-5,72,-7,-6,76,-4,]),'PLUS':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[13,-24,-22,-23,-25,13,-24,-9,-10,-11,-12,-13,13,13,13,13,13,13,13,13,-21,-9,13,13,13,]),'MINUS':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[14,-24,-22,-23,-25,14,-24,-9,-10,-11,-12,-13,14,14,14,14,14,14,14,14,-21,-9,14,14,14,]),'TIMES':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[15,-24,-22,-23,-25,15,-24,-9,15,15,-12,-13,15,15,15,15,15,15,15,15,-21,-9,15,15,15,]),'DIVIDE':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[16,-24,-22,-23,-25,16,-24,-9,16,16,-12,-13,16,16,16,16,16,16,16,16,-21,-9,16,16,16,]),'MOD':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[17,-24,-22,-23,-25,17,-24,-9,-10,-11,-12,-13,17,-15,-16,-17,-18,-19,-20,17,-21,-9,17,17,17,]),'LT':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[18,-24,-22,-23,-25,18,-24,-9,-10,-11,-12,-13,18,None,None,None,None,None,None,18,-21,-9,18,18,18,]),'LE':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[19,-24,-22,-23,-25,19,-24,-9,-10,-11,-12,-13,19,None,None,None,None,None,None,19,-21,-9,19,19,19,]),'GT':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[20,-24,-22,-23,-25,20,-24,-9,-10,-11,-12,-13,20,None,None,None,None,None,None,20,-21,-9,20,20,20,]),'GE':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[21,-24,-22,-23,-25,21,-24,-9,-10,-11,-12,-13,21,None,None,None,None,None,None,21,-21,-9,21,21,21,]),'EQ':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[22,-24,-22,-23,-25,22,-24,-9,-10,-11,-12,-13,22,None,None,None,None,None,None,22,-21,-9,22,22,22,]),'NE':([2,3,4,5,12,26,28,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[23,-24,-22,-23,-25,23,-24,-9,-10,-11,-12,-13,23,None,None,None,None,None,None,23,-21,-9,23,23,23,]),'ASSIGN':([3,],[24,]),'RPAREN':([4,5,12,26,28,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,57,68,],[-22,-23,-25,47,-24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,54,-21,-9,55,61,71,]),'LBRACE':([9,54,55,61,70,],[30,58,59,65,73,]),'SEMICOLON':([11,27,44,45,71,],[32,48,52,53,74,]),'ELSE':([66,],[70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,30,31,58,59,65,73,],[1,50,51,62,63,69,75,]),'expression':([0,7,13,14,15,16,17,18,19,20,21,22,23,25,29,30,31,51,58,59,64,65,73,],[2,26,33,34,35,36,37,38,39,40,41,42,43,46,49,2,2,57,2,2,68,2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statements_expr','parser.py',14),
  ('statement -> ID ASSIGN NUMBER SEMICOLON','statement',4,'p_statements_assign_binOP','parser.py',18),
  ('statement -> ID ASSIGN FLOAT SEMICOLON','statement',4,'p_statements_assign_binOP','parser.py',19),
  ('statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','statement',11,'p_statement_if_else','parser.py',23),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','statement',7,'p_statement_while','parser.py',35),
  ('statement -> DO LBRACE statement RBRACE WHILE LPAREN expression RPAREN SEMICOLON','statement',9,'p_statement_do_while','parser.py',39),
  ('statement -> FOR LPAREN statement expression RPAREN LBRACE statement RBRACE','statement',8,'p_statement_for','parser.py',43),
  ('statement -> error SEMICOLON','statement',2,'p_statement_error','parser.py',47),
  ('expression -> error SEMICOLON','expression',2,'p_expression_error','parser.py',51),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',55),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',56),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',57),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',58),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',59),
  ('expression -> expression LT expression','expression',3,'p_expression_logical','parser.py',64),
  ('expression -> expression LE expression','expression',3,'p_expression_logical','parser.py',65),
  ('expression -> expression GT expression','expression',3,'p_expression_logical','parser.py',66),
  ('expression -> expression GE expression','expression',3,'p_expression_logical','parser.py',67),
  ('expression -> expression EQ expression','expression',3,'p_expression_logical','parser.py',68),
  ('expression -> expression NE expression','expression',3,'p_expression_logical','parser.py',69),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',74),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',78),
  ('expression -> FLOAT','expression',1,'p_expression_float','parser.py',82),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',86),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',90),
]
